{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\github\\\\react-practice\\\\14-Authentication\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const URL = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCPjJSamRqXRoubpmDBKqczw55_eAjbpT8';\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const submitHandler = event => {\n    event.prevendDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setIsLoading(true);\n\n    if (isLogin) {} else {\n      fetch(URL, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        if (res.ok) {} else {\n          res.json().then(data => {\n            let errorMessage = 'Auth Failed!';\n\n            if (data && data.error & data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"QDFRGzK9DhTBG7KNPxMa2l2fPUg=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","classes","AuthForm","URL","emailInputRef","passwordInputRef","isLoading","setIsLoading","isLogin","setIsLogin","submitHandler","event","prevendDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","alert","switchAuthModeHandler","prevState","auth","control","actions","toggle"],"sources":["F:/Programming/github/react-practice/14-Authentication/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n\n  const URL = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCPjJSamRqXRoubpmDBKqczw55_eAjbpT8'\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLogin, setIsLogin] = useState(true);\n  \n  const submitHandler = (event) => {\n    event.prevendDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    if (isLogin) {\n\n    } else {\n      fetch(URL, \n        {\n          method: 'POST',\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      ).then(res => {\n        setIsLoading(false);\n        if (res.ok) {\n\n        } else {\n          res.json().then(data => {\n            let errorMessage = 'Auth Failed!';\n            if (data && data.error & data.error.message) {\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n          });\n        }\n      })\n    }\n\n  }\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef} />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
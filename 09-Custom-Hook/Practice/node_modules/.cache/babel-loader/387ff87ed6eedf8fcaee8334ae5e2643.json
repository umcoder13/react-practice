{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nconst useCounter = function () {\n  _s();\n\n  let forwards = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (forwards) {\n        setCounter(prevCounter => prevCounter + 1);\n      } else {\n        setCounter(prevCounter => prevCounter - 1);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [forwards]);\n  return counter;\n};\n\n_s(useCounter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\nexport default useCounter;","map":{"version":3,"names":["React","useState","useEffect","useCounter","forwards","counter","setCounter","interval","setInterval","prevCounter","clearInterval"],"sources":["F:/Programming/github/react-practice/09-Custom-Hook/src/hooks/use-counter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst useCounter = (forwards = true) => {\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (forwards) {\r\n                setCounter((prevCounter) => prevCounter + 1);\r\n            } else {\r\n                setCounter((prevCounter) => prevCounter - 1);\r\n            }\r\n        \r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forwards]);\r\n\r\n    return counter;\r\n};\r\n\r\nexport default useCounter;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,UAAU,GAAG,YAAqB;EAAA;;EAAA,IAApBC,QAAoB,uEAAT,IAAS;EACpC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAIJ,QAAJ,EAAc;QACVE,UAAU,CAAEG,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;MACH,CAFD,MAEO;QACHH,UAAU,CAAEG,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;MACH;IAEJ,CAP2B,EAOzB,IAPyB,CAA5B;IASA,OAAO,MAAMC,aAAa,CAACH,QAAD,CAA1B;EACH,CAXQ,EAWN,CAACH,QAAD,CAXM,CAAT;EAaA,OAAOC,OAAP;AACH,CAjBD;;GAAMF,U;;AAmBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}
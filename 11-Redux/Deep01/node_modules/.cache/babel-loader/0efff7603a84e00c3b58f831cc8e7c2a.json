{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemFromCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantiy: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantiy++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem.quantiy === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantiy--;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addItemFromCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantiy","totalPrice","removeItemFromCart","filter","cartActions","actions"],"sources":["F:/Programming/github/react-practice/11-Redux/Deep01/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        totalAmount: 0\r\n    },\r\n    reducers: {\r\n        addItemFromCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find((item) => item.id === newItem.id);\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    itemId: newItem.id, \r\n                    price: newItem.price, \r\n                    quantiy: 1, \r\n                    totalPrice: newItem.price\r\n                });\r\n            } else {\r\n                existingItem.quantiy++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            if (existingItem.quantiy === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantiy--;\r\n            }\r\n        },\r\n    }\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MADoB;EAE1BC,YAAY,EAAE;IACVC,KAAK,EAAE,EADG;IAEVC,aAAa,EAAE,CAFL;IAGVC,WAAW,EAAE;EAHH,CAFY;EAO1BC,QAAQ,EAAE;IACNC,eAAe,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;;MACA,IAAI,CAACH,YAAL,EAAmB;QACfJ,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB;UACbC,MAAM,EAAEP,OAAO,CAACK,EADH;UAEbG,KAAK,EAAER,OAAO,CAACQ,KAFF;UAGbC,OAAO,EAAE,CAHI;UAIbC,UAAU,EAAEV,OAAO,CAACQ;QAJP,CAAjB;MAMH,CAPD,MAOO;QACHN,YAAY,CAACO,OAAb;QACAP,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BV,OAAO,CAACQ,KAA5D;MACH;IACJ,CAfK;;IAgBNG,kBAAkB,CAACb,KAAD,EAAQC,MAAR,EAAgB;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;;MACA,IAAIH,YAAY,CAACO,OAAb,KAAyB,CAA7B,EAAgC;QAC5BX,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYmB,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;MACH,CAFD,MAEO;QACHH,YAAY,CAACO,OAAb;MACH;IACJ;;EAxBK;AAPgB,CAAD,CAA7B;AAmCA,OAAO,MAAMI,WAAW,GAAGvB,SAAS,CAACwB,OAA9B;AAEP,eAAexB,SAAf"},"metadata":{},"sourceType":"module"}